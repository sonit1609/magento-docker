version: "3"

services:
    php:
        image: sun7pro/magento2-php-fpm:php7.4
        restart: always
        working_dir: /var/www/html/magento
        volumes:
            - ./:/var/www/html/magento
            - ./dev/docker/images/php/php-custom.ini:/usr/local/etc/php/conf.d/php-custom.ini
        expose:
            - "9000"
        environment:
            HOST_UID: result of command `id -u`
            HOST_GID: result of command `id -g`
    nginx:
        restart: always
        image: nginx:1
        working_dir: /var/www/html/magento
        volumes:
            - ./:/var/www/html/magento
            - ./dev/docker/images/nginx/magento.conf:/etc/nginx/conf.d/default.conf
        ports:
            - "8011:80"
    mysql:
        restart: always
        image: mysql:8.0
        command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --log_bin_trust_function_creators=1
        volumes:
            - ./dev/docker/images/mysql/initdb:/docker-entrypoint-initdb.d
            - ./dev/docker/data/mysql:/var/lib/mysql
        environment:
            MYSQL_DATABASE: 'magento_db'
            MYSQL_ROOT_PASSWORD: '123'
            MYSQL_USER: 'son'
            MYSQL_PASSWORD: '123'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'false'
        expose:
            - "3306"
    # Currently, no neeed to use Varnish in PWA?
    # varnish:
    #     restart: always
    #     image: varnish:6
    #     volumes:
    #         - ./dev/docker/images/varnish/default.vcl:/etc/varnish/default.vcl
    #     expose:
    #         - "80"
    #     ports:
    #         - "8011:80"
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        environment:
        - PMA_ARBITRARY=1
        restart: always
        ports:
        - "8080:80"
        volumes:
        - /sessions
        external_links:
        - mysql
        depends_on:
        - mysql
        - redis
        redis:
            restart: always
            image: redis
            expose:
            - "6379"
    mail-server:
        restart: always
        image: mailhog/mailhog
        user: root # Needed if using maildir
        environment:
            MH_STORAGE: maildir
            MH_MAILDIR_PATH: /var/data/mailhog
        volumes:
            - ./dev/docker/data/mailhog:/var/data/mailhog
        expose:
            - "1025" # SMTP Server to send mail
            - "8025" # HTTP Server to check mail
        ports:
            - "8022:8025"
    pwa-storefront:
        restart: always
        image: node:10
        user: node
        tty: true
        working_dir: /home/node/pwa-storefront
        command: /usr/local/bin/start-dev-server.sh
        volumes:
            - ./pwa-storefront:/home/node/pwa-storefront
            - ./dev/docker/images/pwa-storefront/start-dev-server.sh:/usr/local/bin/start-dev-server.sh
        expose:
            # This is also port on host machine, when using network_mode: host
            # Port config is in file pwa-storefront/.env
            - "3033"
        ports:
            - "3033:3033"
    elasticsearch:
        restart: always
        image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
        environment:
            discovery.type: single-node
            ES_JAVA_OPTS: "-Xms512m -Xmx512m"
        volumes:
            - elasticsearch_data:/usr/share/elasticsearch/data
        ports:
            - 9222:9200
volumes:
    elasticsearch_data:
